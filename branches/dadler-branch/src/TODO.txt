DADLER-BRANCH 'towards 0.65' TODO :
==================================

- move rgl's demos to rgldemos.
- z-sorted triangle rendering

- rgl's demo will ask user to download package 'rgldemos'.
- update new build structure

DOCUMENTATION
=============

- doxygen

BUILD SYSTEM
============

- msvc7
- borland 6


ARCHITECTURE
============

- one thread per device
  pro: scripting/animations could run without blocking R
  con: howto script animations in R when the R client runs asynchronous?
  	- event system
  
- distributed browser/Rplugin
  
- architecture refactoring:

  the R client has a devicemanager that holds references to devices and scenes
  it implements the R client API logic concerning when to create a scene and when to
  open a device.
  
  rx3d.cpp - low-level C interface implementation of the R package
  rdevicemanager.cpp - devicemanager
  device.hpp - device interface
  
- R/X3D interface

  void     x3d_load_component(X3DScene* scene, const char* component);
  X3DNode* x3d_create_node(X3DScene* scene, const char* clazzname, const char* nodename);
  Result   x3d_set_field(const char* nodename, const char* fieldname, int Rtype, void* value);
  
  x3d.createNode()
  x3d.setField()
  x3d.add()
  x3d.remove()
  
rgl.spheres
	
  noderef <- x3d.create("mesh.sphere")
  x3d.set(noderef,"segments",10)
  x3d.set(noderef,"sections",8)
  
  x3d.add(sceneref,"children",noderef)
 


TODO
====
- package vignette 
- win32: window icon
- rgl.bbox labels
- z-sorted alpha-blended surfaces
- R namespaces
- pixmap index format
- bbox: non-uniform scale per axis
- embedded multi-threaded framework
- 3d util functions
- parametric shapes
- spheres,bg: specify sections and segments 
- bg: sphere horizontal color range
- multi-pass rendering (through accumulation) ... depth of field?!
- win32/visualc++: built resets fpu word (detected with options(warn.FPU=t) )

