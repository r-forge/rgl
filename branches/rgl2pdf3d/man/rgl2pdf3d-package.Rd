\name{rgl2pdf3d-package}
\alias{rgl2pdf3d-package}
\alias{rgl2pdf3d}
\docType{package}
\title{
Exporter from rgl 3D visualization device system to Adobe 3D PDF
}
\description{The \pkg{rgl2pdf3d} package provides an exporter to save 3D scene created in \pkg{rgl} package as a 3D PDF file, that can be viewed in Adobe Reader or Acrobat (version 9+).  
   The components of the 3D PDF can be output in separate files if you want to embed the 3D model into your own PDF file (produced, for example,  with Acrobat or LaTeX). 
}
\usage{
rgl2pdf3d(basefilename,
 writepdf = TRUE, writeprc = FALSE, writevws = FALSE, writejs  = FALSE)
}
\arguments{
  \item{basefilename}{filename without extension (may include path)}
  \item{writepdf}{if TRUE produce the basefilename.pdf file with the 3D model, for standalone or preview use}
  \item{writeprc}{if TRUE produce the basefilename.prc file that is the 3D model itself, to be future embedd into PDF}
  \item{writevws}{if TRUE produce the basefilename.vws file (in the format of the media9 LaTeX package) that sets the parameters for embedding the PRC model into PDF}
  \item{writejs}{if TRUE produce the basefilename.js file with JavaScript necessary to animate Sprites (this file is the same in any case)}
}
\value{
The filenames of the files written.
}
\details{
Modern desktop PDF viewers from Adobe support native 3D content in PDF (3D models in PRC format can be included as 3D annotations into PDF file, in tech-speak).  
The \code{rgl2pdf3d} function saves 3D scene created in \pkg{\link{rgl}} package in PRC format and embeds it into a PDF file.  
The PDF file can be used standalone, attached to LaTeX PDF output (via attachfile2 LaTeX package) or used in Windows PowerPoint presentation (via free utility from \href{http://www.pdf3d.com/PDF3D_in_PowerPoint.php}{Visual Technology Services}).  
For those who want to include 3D model directly into their PDF document (media9 package does that for LaTeX), the constituent parts of the 3D annotation can be output as separate files.
See example for a TeX file showing basic use of \code{rgl2pdf3d} output in LaTeX.  
Since 3D PDF generated by \code{rgl2pdf3d} uses JavaScript security warning may appear in the viewer.  
No other PDF viewers but the ones from Adobe support 3D models in PDF.  
}
\author{
Michail Vidiassov and authors of \pkg{rgl}, from where much of the code was taken.  

Maintainer: Michail Vidiassov \email{master@iaas.msu.ru}  
}
\references{
\href{http://astronomy.swin.edu.au/s2plot/3dpdf/davidgbarnes-submitted-version.pdf}{Barnes, D.G., Fluke, C.J., 2008, Incorporating interactive 3-dimensional graphics in astronomy research papers, New Astronomy, 13, 599.}
\href{http://www.slac.stanford.edu/cgi-wrap/getdoc/slac-pub-15295.pdf}{Norman A. Graf, 2012, 3DPDF: Open Source Solutions for Incorporating 3D Information in PDF Files, SLAC-PUB-15295.}
\href{http://www.plosone.org/article/info:doi/10.1371/journal.pone.0069446}{Barnes DG, Vidiassov M, Ruthensteiner B, Fluke CJ, Quayle MR, et al. (2013) Embedding and Publishing Interactive, 3-Dimensional, Scientific Figures in Portable Document Format (PDF) Files. PLoS ONE 8(9): e69446. doi:10.1371/journal.pone.0069446}
}
\keyword{
 package
 dynamic
}
\examples{
# Create PDF and PRC files, plus a demo LaTeX document using them
library(rgl2pdf3d)
rgl.viewpoint(phi=0,theta=0);
rgl.lines(c(0,1),c(0,0),c(0,0),col=c("red")  )
rgl.lines(c(0,0),c(0,1),c(0,0),col=c("green"))
rgl.lines(c(0,0),c(0,0),c(0,1),col=c("blue") )
rgl.sprites(x=c(0,1),y=c(0,1),z=c(0,1),radius=c(0.2),
 color=c("red"),lit=FALSE,alpha=.2,
 textype="alpha",texture=system.file("textures/particle.png", package="rgl"))
rgl.texts(c(0.5), c(0.5), c(0.5), "test", cex=1.0, color="red")
v_z <- matrix(c(0.1,0.1, 0.1,0.1, 0.1,0.1), nrow = 3, ncol = 2, byrow = TRUE)
v_x <- (0:(nrow(v_z)-1))
v_y <- (0:(ncol(v_z)-1))
t_s <- matrix(c(0,0, 0.5,0.5, 1,1), nrow = 3, ncol = 2, byrow = TRUE)
t_t <- matrix(c(0,1, 0,1, 0,1), nrow = 3, ncol = 2, byrow = TRUE)
rgl.surface(x=v_x,z=v_y,y=v_z,coords=c(1,3,2),
 col=c("red","green","blue", "red","green","blue"), lit=FALSE,
 texture_s=t_s, texture_t=t_t,
 texture=system.file("textures/rgl2.png", package="rgl"))
v_z <- 7*v_z
v_x <- 0.7*v_x
v_y <- 0.4*v_y
rgl.surface(x=v_x,z=v_y,y=v_z,coords=c(1,3,2),
 col=c("red","green","blue", "red","green","blue"), alpha=c(1,1,1,0.5,0.5,0.5), lit=TRUE)
rgl.bbox(color="gray")
rgl.snapshot("3ddemo.png")
# Create prc, js and vws for model that will be directly used in pdfLaTeX output
rgl2pdf3d("3ddemo",FALSE,TRUE,TRUE,TRUE)
demo(abundance, package="rgl",verbose=FALSE,echo=FALSE,ask=FALSE)
rgl.snapshot("abundance.png")
# Create pdf that will be attached to pdfLaTeX output
rgl2pdf3d("abundance")
# Simple text file showing basic use of 3D in PDF, run it with pdflatex
cat(c(
"\\\\documentclass[a4paper]{article}",
"\\\\usepackage[margin=0.5in]{geometry}",
"\\\\usepackage{media9}",
"\\\\usepackage{attachfile2}",
"\\\\setlength{\\\\parindent}{0pt}",
"\\\\begin{document}",
"There are two way to use \\\\texttt{rgl2pdf3d} output in pdf\\\\LaTeX{}.",
"",
"The simple approach is to attach the PDF file created by \\\\texttt{rgl2pdf3d} to PDF output of",
"pdf\\\\LaTeX{} using attachfile2 package",
"(double-click the image to see the model in separate document window). ",
"",
"\\\\textattachfile{abundance.pdf}{\\\\includegraphics{abundance.png}}",
"",
"More control over 3D model behavior can be achieved using media9 package,",
"that can make a 3D annotation in the main PDF file generated by pdf\\\\LaTeX",
"from the PRC model created by \\\\texttt{rgl2pdf3d}. ",
"PDF viewers that are not modern desktop Adobe products show just the static image.",
"",
"\\\\includemedia[",
"activate=onclick,",
"windowed,",
"3Dtoolbar,",
"add3Djscript=3ddemo.js,",
"3Dviews=3ddemo.vws,",
"]{\\\\includegraphics{3ddemo.png}}{3ddemo.prc}",
"",
"\\\\end{document}"),
file="rgl2pdf.tex",sep="\\n")
}
\note{
The limitations of 3D PDF output include, but are not limited to:  
\itemize{
\item Only Courier Regular font is used for text. Font size may differ from OpenGL output.  
\item Vertex colors make meshes immune to lighting and opaque in Adobe viewer. To work around that limitation colors are averaged or textures are created behind the scenes, but the result may be poor.  
\item There is no support for fog or environment textures.  
\item There is no support for rendering different sides of a mesh differently.  
\item Bounding box remains the same as in the initial position.  
}
The package is under development, so try to contact package author to report your problems if you have any.  
But since both \pkg{rgl} and 3D PDF are rich and obscure, every possible combination of features will never be tested and supported.  
}
